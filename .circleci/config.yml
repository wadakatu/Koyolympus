version: 2
jobs:
  build:
    working_directory: ~/koyolympus
    docker:
      - image: cimg/node:16.5.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-cache-koyolympus-{{ checksum "koyolympus/package-lock.json" }}
            - npm-cache-koyolympus-
      - run:
          name: npm install
          command: |
            DIR='./koyolympus/node_modules'
            if [ -d "${DIR}" ]; then
                echo "[node_modules] directory is already exist, so [npm install] does not run."
            else
                npm --prefix koyolympus install koyolympus
            fi
      - save_cache:
          key: npm-cache-koyolympus-{{ checksum "koyolympus/package-lock.json"}}
          paths:
            - koyolympus/node_modules
      - run:
          name: npm run production
          working_directory: koyolympus
          command: npm run circle-ci

  test:
    docker:
      - image: circleci/php:7.3.0-node-browsers
      - image: circleci/mariadb:10.4
    environment:
      - DB_CONNECTION: circle_testing
      - CC_TEST_REPORTER_ID: $CC_TEST_REPORTER_ID
    steps:
      - checkout
      - run:
          name: Update apt-get
          command: sudo apt-get update
      - run:
          name: Docker php extensiions install
          command: sudo docker-php-ext-install pdo_mysql
      - run:
          name: libjpeg etc install
          command: sudo apt-get install -y wget git unzip libpq-dev libfreetype6-dev libjpeg-dev libpng-dev
      - run:
          name: php-gd install
          command: sudo docker-php-ext-configure gd --with-png-dir=/usr/include --with-jpeg-dir=/usr/include
      - run:
          name: add install command
          command: sudo docker-php-ext-install gd
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "koyolympus/composer.json" }}
            - v1-dependencies-
      - run:
          name: Install PHP libraries
          command: composer install -n --prefer-dist --working-dir=./koyolympus
      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "koyolympus/composer.json" }}
      - run:
          name: Show PHPUnit Test List
          command: koyolympus/vendor/bin/phpunit --list-tests koyolympus/tests/Unit/
      - run:
          name: echo .env.testing
          command: echo "APP_KEY=" > .env.testing
      - run:
          name: generate app_key
          command: php artisan key:generate --env=testing
          working_directory: koyolympus
      - run:
          name: config cache
          command: php artisan config:cache
          working_directory: koyolympus
      - run:
          name: migration
          command: php artisan migrate --env=testing
          working_directory: koyolympus
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: run PHPUnit
          command: |
            sudo docker-php-ext-enable xdebug
            ./cc-test-reporter before-build
            koyolympus/vendor/bin/phpunit --coverage-clover clover.xml koyolympus/tests/Unit
            ./cc-test-reporter after-build --coverage-input-type clover --exit-code $?
      - run:
          name: create test coverage dir
          command: cd koyolympus ; mkdir -p build/coverage-report
      - run:
          name: get test coverage
          working_directory: koyolympus
          command: phpdbg -qrr vendor/bin/phpunit --coverage-html build/coverage-report
      - store_artifacts:
          path: koyolympus/build/coverage-report

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
